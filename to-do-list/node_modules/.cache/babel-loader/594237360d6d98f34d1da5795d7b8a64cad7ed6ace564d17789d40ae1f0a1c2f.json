{"ast":null,"code":"var _jsxFileName = \"/home/luiz/Documentos/curso-full-stack-turbo/materiais/gerenciado-arvore-components/gerenciando-arvores-de-components/app-todo-list-code-practice-base/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./components/App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 13\n}, this));\n\n//DESAFIO: Extraí a área de entrada, incluindo o <input> e\n//<button> elementos em um componente separado chamado InputArea.\n//Seu trabalho é fazer o aplicativo funcionar como antes, mas desta vez com o\n//InputArea como um componente separado.\n\n// NÃO: Modifique o ToDoItem.jsx\n// NÃO: mova os elementos input/button de volta para o App.jsx\n\n//Dica 1: Você precisará pensar em como gerenciar o estado do elemento de entrada\n//em InputArea.jsx.\n//Dica 2: Você precisará pensar em como passar o valor de entrada de volta para\n//a função addItem() em App.jsx.","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/luiz/Documentos/curso-full-stack-turbo/materiais/gerenciado-arvore-components/gerenciando-arvores-de-components/app-todo-list-code-practice-base/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./components/App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n\n//DESAFIO: Extraí a área de entrada, incluindo o <input> e\n//<button> elementos em um componente separado chamado InputArea.\n//Seu trabalho é fazer o aplicativo funcionar como antes, mas desta vez com o\n//InputArea como um componente separado.\n\n// NÃO: Modifique o ToDoItem.jsx\n// NÃO: mova os elementos input/button de volta para o App.jsx\n\n//Dica 1: Você precisará pensar em como gerenciar o estado do elemento de entrada\n//em InputArea.jsx.\n//Dica 2: Você precisará pensar em como passar o valor de entrada de volta para\n//a função addItem() em App.jsx."],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cAACL,OAAA,CAACF,GAAG;EAAAQ,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}